<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.neuedu.dao.UserMapper">
  <resultMap id="BaseResultMap" type="com.neuedu.pojo.User">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <result column="id" jdbcType="INTEGER" property="id" />
    <result column="username" jdbcType="VARCHAR" property="username" />
    <result column="password" jdbcType="VARCHAR" property="password" />
    <result column="email" jdbcType="VARCHAR" property="email" />
    <result column="phone" jdbcType="VARCHAR" property="phone" />
    <result column="question" jdbcType="VARCHAR" property="question" />
    <result column="answer" jdbcType="VARCHAR" property="answer" />
    <result column="role" jdbcType="INTEGER" property="role" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="ip" jdbcType="VARCHAR" property="ip" />
  </resultMap>
  <insert id="insert" parameterType="com.neuedu.pojo.User">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into neuedu_user ( username, password,
      email, phone, question,
      answer, role, create_time,
      update_time, ip)
    values ( #{username,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR},
      #{email,jdbcType=VARCHAR}, #{phone,jdbcType=VARCHAR}, #{question,jdbcType=VARCHAR},
      #{answer,jdbcType=VARCHAR}, #{role,jdbcType=INTEGER}, now(),
      now(), #{ip,jdbcType=VARCHAR})
  </insert>
  <select id="selectAll" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select id, username, password, email, phone, question, answer, role, create_time,
    update_time, ip
    from neuedu_user
  </select>
  <select id="isexistsusername" parameterType="string" resultType="int">

    SELECT COUNT(username) FROM neuedu_user WHERE username=#{username}

  </select>

  <select id="isexistsemail" parameterType="string" resultType="int">

    SELECT COUNT(email) FROM neuedu_user WHERE email=#{email}

  </select>

  <select id="findUserByUsernameAndPassword" parameterType="map" resultMap="BaseResultMap">

    select id, username, email, phone, question, answer, role, create_time,
    update_time, ip
    from neuedu_user
    where username = #{username} and password=#{password}

  </select>

  <select id="forget_get_question" parameterType="string" resultType="string">

    select  question
    from neuedu_user
    where username = #{username}

  </select>


  <select id="forget_check_answer" parameterType="map" resultType="int">

    select  COUNT(id)
    from neuedu_user
    where username = #{username} AND question = #{question} AND answer=#{answer}

  </select>

    <update id="forget_reset_password" parameterType="map">

        update neuedu_user
        set
        password = #{password,jdbcType=VARCHAR},

        update_time = now()

        where username = #{username}
    </update>


  <update id="updateUserByActive" parameterType="com.neuedu.pojo.User">
      update neuedu_user
    <set>
      <if test="user.email!=null">
        email=#{user.email},
      </if>
      <if test="user.phone!=null">
        phone=#{user.phone},
      </if>
      <if test="user.question!=null">
        question=#{user.question},
      </if>
      <if test="user.answer!=null">
        answer=#{user.answer},
      </if>
      update_time=now()
    </set>
    <where>
      id=#{user.id}
    </where>
  </update>
</mapper>